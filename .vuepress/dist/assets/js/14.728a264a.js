(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{309:function(a,e,r){"use strict";r.r(e);var t=r(17),s=Object(t.a)({},function(){var a=this,e=a.$createElement,r=a._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"webpack-css-demo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#webpack-css-demo","aria-hidden":"true"}},[a._v("#")]),a._v(" webpack_css_demo")]),a._v(" "),r("h3",{attrs:{id:"概括"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概括","aria-hidden":"true"}},[a._v("#")]),a._v(" 概括")]),a._v(" "),r("p",[a._v("css的编译和📦其实不难，首先你得熟悉webpack的loader和plugins配置，然后了解常用的loader和plugin的作用，基本上可以搞定")]),a._v(" "),r("h3",{attrs:{id:"常用loader"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常用loader","aria-hidden":"true"}},[a._v("#")]),a._v(" 常用loader")]),a._v(" "),r("h4",{attrs:{id:"loader的原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#loader的原理","aria-hidden":"true"}},[a._v("#")]),a._v(" loader的原理")]),a._v(" "),r("p",[a._v("loader的执行顺序是从右向左，这可能是我们最熟悉的，其实不然，loader有两次执行过程，第一次pitch，然后再是normal")]),a._v(" "),r("p",[a._v("比如"),r("code",[a._v("a!b!c!module")]),a._v(", 正常调用顺序应该是c、b、a，但是真正调用顺序是a(pitch)、b(pitch)、c(pitch)、c、b、a， 如果其中任何一个pitching loader返回了值就相当于在它以及它右边的loader已经执行完毕。")]),a._v(" "),r("p",[a._v("style-loader就是利用了pitch")]),a._v(" "),r("h5",{attrs:{id:"normal"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#normal","aria-hidden":"true"}},[a._v("#")]),a._v(" normal")]),a._v(" "),r("p",[a._v("从右往左")]),a._v(" "),r("h5",{attrs:{id:"pitch"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pitch","aria-hidden":"true"}},[a._v("#")]),a._v(" pitch")]),a._v(" "),r("p",[a._v("从左往右,只要其中一个loader的pitch函数返回了值，那么就会跳过它右边的loader的执行")]),a._v(" "),r("h5",{attrs:{id:"async的loader的作用何在？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#async的loader的作用何在？","aria-hidden":"true"}},[a._v("#")]),a._v(" async的loader的作用何在？")]),a._v(" "),r("p",[a._v("未完待续。。。")]),a._v(" "),r("h4",{attrs:{id:"css-loader"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#css-loader","aria-hidden":"true"}},[a._v("#")]),a._v(" css-loader")]),a._v(" "),r("blockquote",[r("p",[a._v("The "),r("code",[a._v("css-loader")]),a._v(" interprets "),r("code",[a._v("@import")]),a._v(" and "),r("code",[a._v("url()")]),a._v(" like "),r("code",[a._v("import/require()")]),a._v(" and will resolve them.")])]),a._v(" "),r("p",[a._v("遇到后缀为.css的文件，webpack先用css-loader加载器去解析这个文件，遇到“@import**、**url()”等语句就将相应样式文件引入（所以如果没有css-loader，就没法解析这类语句），最后返回计算完的css")]),a._v(" "),r("h4",{attrs:{id:"style-loader"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#style-loader","aria-hidden":"true"}},[a._v("#")]),a._v(" style-loader")]),a._v(" "),r("blockquote",[r("p",[a._v("Adds CSS to the DOM by injecting a "),r("code",[a._v("<style>")]),a._v(" tag")])]),a._v(" "),r("p",[a._v("我们一般会对css文件进行处理，处理的的loader就是css-loader，style-loader的作用是把处理后的css以"),r("code",[a._v("<style>")]),a._v("标签形式插入到页面html文件中")]),a._v(" "),r("h5",{attrs:{id:"注意"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#注意","aria-hidden":"true"}},[a._v("#")]),a._v(" 注意")]),a._v(" "),r("p",[a._v("它只是把处理好的css文件内容（string code）加载进html文件，以")]),r("style")])},[],!1,null,null,null);e.default=s.exports}}]);