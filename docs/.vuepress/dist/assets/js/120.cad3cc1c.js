(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{329:function(t,e,r){"use strict";r.r(e);var a=r(2),n=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"设计模式分类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设计模式分类","aria-hidden":"true"}},[t._v("#")]),t._v(" 设计模式分类")]),t._v(" "),r("p",[t._v("1、创建型模式：创建对象的模式，抽象了实例化的过程。")]),t._v(" "),r("p",[t._v("2、结构型模式：解决怎样组装现有对象，设计交互方式，从而达到实现一定的功能目的。例如，以封装为目的的适配器和桥接，以扩展性为目的的代理、装饰器。")]),t._v(" "),r("p",[t._v("3、行为型模式：描述多个类或对象怎样交互以及怎样分配职责。")])])},[],!1,null,null,null);e.default=n.exports}}]);